!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("vue-runtime-helpers")):"function"==typeof define&&define.amd?define(["exports","vue-runtime-helpers"],r):r((n=n||self).Calculator={},n.vueRuntimeHelpers)}(this,function(n,r){"use strict";function d(n){var r=n.data;this.input=String(r),this.position=0,this.char=this.input[this.position],this.tokens=[],this.stash=[]}var t="NUMBER_LITERAL";d.prototype.advance=function(){return this.char=this.input[++this.position]||""},d.prototype.lookahead=function(n){var r=n-this.stash.length;if(this.position>this.input.length)return"";for(;0<r--;){for(var t=this.lex();"\0"===t;)t=this.lex();this.stash.push(t)}return this.stash[n-1]},d.prototype.peek=function(){return this.lookahead(1)},d.prototype.getNextChar=function(){return this.input[this.position+1]},d.prototype.getPreviousChar=function(){return this.input[this.position-1]},d.prototype.next=function(){var n;if(this.position>this.input.length)return"";for(;;){if(this.stash.length)return this.stash.shift();if("\0"!==(n=this.lex()))return n}throw new Error("wtf this should be unreachable: lexer.next")},d.prototype.skip=function(n){this.position+=n,this.char=this.input[this.position]},d.prototype.setLiteral=function(n){this.currentLiteral=n},d.prototype.getLiteral=function(){return this.currentLiteral},d.prototype.lex=function(){if(this.position>=this.input.length)return"";if(A(this.char))return this.advance(),"\0";var n=this.getParenToken()||this.getNumberToken()||this.getOperatorToken();if(null==n)throw new Error('Unrecognized token "'+this.char+'" at position '+this.position);return n},d.prototype.getParenToken=function(){var n=this.char;return l(this.char)?(this.advance(),n):null},d.prototype.getNumberToken=function(){var n=this.char;if(!(i(this.char)||c(this.char)&&i(this.getNextChar())))return null;for(;i(this.advance());)n+=this.char;if(c(this.char))for(;n+=this.char,i(this.advance()););return this.setLiteral(n),n.length?t:null},d.prototype.getOperatorToken=function(){this.char;if(s(this.char)){var n=this.input.substring(this.position,this.position+o).match(f);if(!n)throw new Error("wtf dooood there was not a opeator token found...");for(var r=n[0].length;0<r--;)this.advance();return n[0]}return null};function e(n){return n.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}function g(n){return a.includes(n)}function C(n){var r=n.lexer;this.lexer=r,this.position=0}var a=["/","*","**","-","+","√","%"],o=a.reduce(function(n,r){return r.length>n?r.length:n},0),i=function(n){return p.test(n)},s=function(n){return x.test(n)},l=function(n){return u.test(n)},A=function(n){return h.test(n)},c=function(n){return"."===n},p=/[0-9]/,u=/[()]/,h=/\s/,x=new RegExp(Array.from(new Set(a.map(function(n){return n[0]}))).map(function(n){return e(n)}).join("|")),f=new RegExp(Array.from(a).sort(function(n,r){return r.length-n.length}).map(function(n){return e(n)}).join("|"));C.prototype.parsePrimary=function(){var n,r=this.lexer.peek();if("\0"===r)throw console.log("WTF NULL STRING TOKEN",r),new Error("Unexpected end of expression");if("("===r){if(r=this.lexer.next(),n=this.parseExpression(),")"!==(r=this.lexer.next()))throw new SyntaxError('Expected ")", got '+r);return{type:"Expression",expression:n}}if(r===t)return r=this.lexer.next(),{type:"NumberLiteral",value:this.lexer.getLiteral()};throw new SyntaxError("expected a number, a variable, or parentheses")},C.prototype.parseUnary=function(){var n=this.lexer.peek();return"-"===n||"+"===n?{type:"UnaryExpression",operator:n=this.lexer.next(),expression:this.parseUnary()}:this.parsePrimary()},C.prototype.parsePowAndSquare=function(){for(var n=this.parseUnary(),r=this.lexer.peek();"**"===r||"√"==r;)n={type:"BinaryExpression",operator:r=this.lexer.next(),left:n,right:this.parseUnary()},r=this.lexer.peek();return n},C.prototype.parseMultiplicative=function(){for(var n=this.parsePowAndSquare(),r=this.lexer.peek();"*"===r||"/"==r||"%"===r;)n={type:"BinaryExpression",operator:r=this.lexer.next(),left:n,right:this.parsePowAndSquare()},r=this.lexer.peek();return n},C.prototype.parseAdditive=function(){for(var n=this.parseMultiplicative(),r=this.lexer.peek();"+"===r||"-"===r;)n={type:"BinaryExpression",operator:r=this.lexer.next(),left:n,right:this.parseMultiplicative()},r=this.lexer.peek();return n},C.prototype.parseExpression=function(){return this.parseAdditive()},C.prototype.parse=function(){this.lexer;return{type:"ExpressionStatement",expression:this.parseExpression()}};var E={"+":function(n,r){return n+r},"-":function(n,r){return n-r},"*":function(n,r){return n*r},"/":function(n,r){return n/r},"%":function(n,r){return n%r},"**":function(n,r){return Math.pow(n,r)},"√":function(n,r){return Math.pow(n,1/r)}},b=function(n){var r;switch(n.type){case"ExpressionStatement":case"Expression":return b(n.expression);case"NumberLiteral":return parseFloat(n.value);case"UnaryExpression":switch(r=b(n.expression),n.operator){case"+":return+r;case"-":return-r;default:throw new Error('Parsing error: Unrecognized unary operator "'+n.operator+'"')}case"BinaryExpression":var t=n.left,e=n.right,a=n.operator,o=E[a];if(void 0===o)throw new Error("Unsupported operand");return o(b(t),b(e));default:throw new Error('Parsing error: Unrecognized node type "'+n.type+'"')}};var m="clear",v="clearEntry",O="negate",w="updateOperator",k="appendOperand",_="addParen",y="backspace",N=[{id:"C",text:"C",className:"is-clear",action:m},{id:"CE",text:"CE",className:"is-clearEntry",action:v},{id:"negate",text:"+/-",className:"is-negation",action:O},{id:"modulo",text:"%",className:"is-modulo",action:w,args:{operator:"%"}},{id:"7",text:"7",action:k,args:{value:"7"}},{id:"8",text:"8",action:k,args:{value:"8"}},{id:"9",text:"9",action:k,args:{value:"9"}},{id:"/",text:"/",className:"is-division",action:w,args:{operator:"/"}},{id:"4",text:"4",action:k,args:{value:"4"}},{id:"5",text:"5",action:k,args:{value:"5"}},{id:"6",text:"6",action:k,args:{value:"6"}},{id:"*",className:"is-multiplication",text:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path fill="rgba(255,255,255,.9)" stroke="rgba(255,255,255,.9)" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M368 368L144 144"/><path fill="none" stroke="rgba(255,255,255,.9)" stroke-linecap="round" stroke-linejoin="round" stroke-width="32" d="M368 144L144 368"/></svg>',action:w,args:{operator:"*"}},{id:"1",text:"1",action:k,args:{value:"1"}},{id:"2",text:"2",action:k,args:{value:"2"}},{id:"3",text:"3",action:k,args:{value:"3"}},{id:"-",className:"is-subtraction",text:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><title>ionicons-v5-e</title><line x1="400" y1="256" x2="112" y2="256" style="fill:rgba(255,255,255,0.9);stroke:rgba(255,255,255,0.9);stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"/></svg>',action:w,args:{operator:"-"}},{id:"0",text:"0",action:k,args:{value:"0"}},{id:"(",text:"(",className:["is-paren","is-open-paren"],action:_,args:{operator:"("}},{id:")",text:")",className:["is-paren","is-close-paren"],action:_,args:{operator:")"}},{id:".",text:".",action:k,args:{value:"."}},{id:"+",text:"",className:"is-addition",text:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><path style="fill: rgba(255,255,255,0.9);stroke: rgba(255,255,255,0.9)" d="M368.5 240H272v-96.5c0-8.8-7.2-16-16-16s-16 7.2-16 16V240h-96.5c-8.8 0-16 7.2-16 16 0 4.4 1.8 8.4 4.7 11.3 2.9 2.9 6.9 4.7 11.3 4.7H240v96.5c0 4.4 1.8 8.4 4.7 11.3 2.9 2.9 6.9 4.7 11.3 4.7 8.8 0 16-7.2 16-16V272h96.5c8.8 0 16-7.2 16-16s-7.2-16-16-16z"/></svg>',action:w,args:{operator:"+"}}],P=Number.MAX_SAFE_INTEGER.toString().length;function D(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"CalculatorBackground"},[t._m(0),t._v(" "),e("div",{staticClass:"Calculator"},[e("header",{staticClass:"Calculator-header"},[e("div",{staticClass:"Calculator-formula",attrs:{"data-formula":""}},[e("span",{staticClass:"Calculator-formulaOverflow"}),e("span",{staticClass:"Calculator-formulaList"},[t._v(t._s(t.formula))])]),t._v(" "),e("div",{staticClass:"Calculator-operands"},[e("span",{staticClass:"Calculator-currentOperand",class:{"has-error":t.error},style:{"font-size":t.font.size,"font-weight":t.font.weight},attrs:{"data-total":""}},[t.error?e("span",[t._v("Error")]):t.mode&t.MODE_SHOW_TOTAL?e("span",[t._v(t._s(t.total))]):e("span",[t._v(t._s(t.currentOperand))])])])]),t._v(" "),e("div",{staticClass:"Calculator-body"},[e("div",{staticClass:"Calculator-buttonsContainer"},t._l(t.buttons,function(r){return e("button",{key:r.id,staticClass:"Calculator-button",class:r.className,attrs:{"data-id":r.id},on:{click:function(n){return t.exec(r.action,r.args)}}},[e("span",{domProps:{innerHTML:t._s(r.text)}})])}),0)]),t._v(" "),e("button",{staticClass:"Calculator-equals",attrs:{title:"equals"},on:{click:t.onExplicitEquals}},[e("div",{staticClass:"Calculator-equalsLine"}),t._v(" "),e("div",{staticClass:"Calculator-equalsLine"})])])])}var T=[{match:{key:"Enter"},action:"showTotal"},{match:{key:"Backspace"},action:y},{match:{key:"Escape"},action:m},{match:{key:"Delete"},action:v}].concat(["1","2","3","4","5","6","7","8","9"].map(function(n){return{match:{key:n},action:k,args:{value:n}}}),["*","+","-","/"].map(function(n){return{match:{key:n},action:w,args:{value:n}}})),R={props:{commands:{type:Array,default:function(){return T}}},mounted:function(){window.addEventListener("keydown",this.onKeyDown)},data:function(){return{MODE_SHOW_TOTAL:2,MODE_INSERT_OPERAND:4,MODE_APPEND_OPERAND:8,activeButtons:[],buttons:N,expressions:["5","+","7","-","45","+","3","+","177","-"],currentOperand:"147",currentOperator:"-",mode:6,openParenStack:0,error:null,total:147}},computed:{formula:function(){return this.expressions.map(function(n,r,t){var e,a=n.trim();return"("===t[r-1]||")"===a?a:"-"===a[0]&&(e=a[1],/^[0-9.]/.test(e))?" "+n:" "+a}).join("")},font:function(){var n,r,t;return(n=2&this.mode?this.total.toString().length:this.currentOperand.toString().length)<8?(r="60px",t="200"):n<=P?(r="28px",t="300"):P<=n&&(r="24px",t="300"),{size:r,weight:t}}},methods:{onKeyDown:function(e){var a=this;event.defaultPrevented||this.commands.forEach(function(t){Object.keys(t.match).map(function(n){var r=t.match[n];e[n]===r&&(a.exec(t.action,t.args),a.$emit("keypress"))})})},onExplicitEquals:function(){this.showTotal({explicit:!0})},exec:function(n,r){switch(console.log(n),n){case y:this.backspace(r),this.$emit("backspace");break;case m:this.clear(r),this.$emit("clear");break;case v:this.clearEntry(r),this.$emit("clear-entry");break;case O:this.negate(r),this.$emit("negate");break;case w:this.updateOperator(r),this.$emit("operator.update");break;case k:this.appendOperand(r),this.$emit("operand.append");break;case _:this.addParen(r),this.$emit("paren.add");break;default:console.error('action not found: "'+n+'"')}this.showTotal()},clear:function(){this.expressions=[],this.currentOperand="0",this.currentOperator="",this.openParenStack=0,this.mode=6,this.error=null,this.total=0},backspace:function(){var n=this.currentOperand.slice(0,-1);0===n.length&&(n="0"),this.currentOperand=n},clearEntry:function(){this.currentOperand="0"},negate:function(){0!==this.currentOperand&&(this.currentOperand=(-this.currentOperand).toString())},updateOperator:function(n){var r=n.operator,t=this.expressions.length,e=this.expressions[t-1]||"",a=this.mode,o=this.currentOperand;4&a?0===t?this.expressions.push(o,r):g(e)?(this.expressions.pop(),this.expressions.push(r)):")"===e?this.expressions.push(r):"("===e&&this.expressions.push(o,r):8&a&&(0===t||g(e)?this.expressions.push(o,r):")"===e?this.expressions.push(r):"("===e&&this.expressions.push(o,r)),this.currentOperator=r,this.mode=6,console.log("UPDATE_OPERATOR:",this.expressions)},addParen:function(n){var r=n.operator,t=this.expressions[this.expressions.length-1]||"",e=this.currentOperand,a=this.openParenStack;")"===r&&0===a||"("===r&&")"===t||("("===t&&")"===r||g(t)&&")"===r?this.expressions.push(e,r):!g(t)&&0!==length||"("!==r||this.expressions.push(r),"("===r?this.openParenStack++:")"===r&&this.openParenStack--)},appendOperand:function(n){var r=n.value,t=(n.operator,this.currentOperand),e=t;"0"===r&&"0"===t[0]||"."===r&&t.includes(".")||(this.mode,4&this.mode?(e=r.toString(),this.mode=8):e+=r.toString(),this.currentOperand=e.substring(0,P))},showTotal:function(n){void 0===n&&(n={});var r,t=n.explicit,e=this.expressions[this.expressions.length-1]||"",a=this.expressions.slice(0),o=this.currentOperand,i=this.mode,s=this.total,l=this.openParenStack,A="number"==typeof Number(a[0]),c=g(a[1]||""),p=a.length;if(0!==a.length){if(t&&A&&c&&2===p?a.push(o):t&&g(e)?4&i?a.push(s):8&i&&a.push(o):g(e)&&a.pop(),t)for(var u=l;0<u--;)a.push(")");else t||1!==l||a.push(")");try{h=a.join(" "),r=b(new C({lexer:new d({data:h})}).parse()),t&&this.clear(),this.total=r}catch(n){t&&(this.clear(),this.error=n,console.log(n))}var h;return console.log('SHOW_TOTAL; Expressions: "%s"; Total: %s; Explicit: %s',a.join(" "),r,!!t),t?this.$emit("update:total.explicit"):this.$emit("update:total"),r}}}};D._withStripped=!0;var S=r.normalizeComponent({render:D,staticRenderFns:[function(){var n=this.$createElement,r=this._self._c||n;return r("noscript",[r("link",{attrs:{href:"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400&display=swap",rel:"stylesheet"}}),this._v(" "),r("meta",{attrs:{name:"viewport",content:"width=device-width, initial-scale=1"}})])}]},function(n){n&&n("data-v-9458653c_0",{source:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n/* // */\r\n/* // -> Design credit goes to Jaroslav Getman */\r\n/* // -> https://dribbble.com/shots/2334270-004-Calculator */\r\n/* // */\r\n\r\n/* @import url('https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css') */\nhtml {\r\n  --foreground--dark: #151515;\r\n\r\n  --background-gradient-1: #b6b2ab;\r\n  --background-gradient-2: #b3afa7;\r\n\r\n  --background-gradient-3: #b8b5af;\r\n  --background-gradient-4: #78736b;\r\n\r\n  --background-gradient-5: #6f6862;\r\n  --background-gradient-6: #58504b;\r\n\r\n  --background-gradient-7: #5f574e;\r\n  --background-gradient-8: #625a51;\r\n\r\n  /* // I don't know how to get the colors closer here, would need the actual hsla */\r\n  --gradient-blue-1: hsla(226, 12%, 40%, 0.76);\r\n  --gradient-blue-2: hsla(222, 12%, 13%, 0.8);\r\n\r\n  --gradient-orange-1: #ff8d4b;\r\n  --gradient-orange-2: #ff542e;\r\n\r\n  --calculator-width: 260px;\r\n  --header-padding-left: 20px;\r\n  --something-height: 22px;\n}\n.Calculator,\r\n.Calculator *,\r\n.Calculator *:before,\r\n.Calculator *:after {\r\n  box-sizing: inherit;\n}\n.CalculatorBackground {\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(\r\n    135deg,\r\n    #b6b2ab 0%,\r\n    #b3afa7 25%,\r\n    #b8b5af 25%,\r\n    #78736b 50%,\r\n    #6f6862 50%,\r\n    #58504b 75%,\r\n    #5f574e 75%,\r\n    #625a51 100%\r\n  );\r\n  min-height: 100vh;\n}\n.Calculator {\r\n  box-shadow: 12px 18px 45px 0 rgba(0, 0, 0, 0.25);\r\n  cursor: default;\r\n  font-family: Source Sans Pro;\r\n  line-height: 1.5;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  user-select: none;\r\n  width: var(--calculator-width);\r\n  z-index: 1;\n}\n.Calculator-header {\r\n  background: white;\r\n  overflow: hidden;\r\n  padding: 20px var(--header-padding-left);\r\n  position: relative;\r\n  text-align: right;\n}\n.Calculator-formula {\r\n  color: rgba(158, 158, 158, 0.76);\r\n  display: block;\r\n  float: right;\r\n  font-size: 15px;\r\n  line-height: var(--something-height);\r\n  min-height: var(--something-height);\r\n  position: relative;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  word-wrap: normal;\n}\n.Calculator-formulaList {\r\n  display: block;\r\n  float: right;\n}\r\n\r\n/* // \tNot sure how to represent that there are more expressions to the left */\n.Calculator__expressionsOverflow {\r\n  /* $width: 2px */\r\n  color: #333;\r\n  box-shadow: 5px 0 20px 4px rgba(0, 0, 0, 0.3);\r\n  font-weight: 700;\r\n  opacity: 0;\r\n  padding-right: 0px;\r\n  text-align: center;\r\n  transition: opacity 0.5s;\r\n  transform: translate(0, -50%);\r\n  /* +position(absolute, 50% null null negative($header-padding-left) - $width - 2) */\r\n  /* +size($width $height - 5) */\n}\n.Calculator__expressionsOverflow:before {\r\n  content: '';\n}\n.Calculator__expressionsOverflow.is-showing {\r\n  opacity: 1;\n}\n.Calculator-operands {\r\n  color: var(--foreground--dark);\r\n  font-size: 60px;\r\n  font-weight: 200;\r\n  line-height: 1.1;\r\n  clear: both;\n}\n.Calculator-currentOperand {\r\n  display: block;\r\n  float: right;\r\n  line-height: 60px;\r\n  overflow: visible;\r\n  min-height: 60px;\r\n  transition-duration: 0.2s;\r\n  transition-property: font-size;\n}\n.Calculator-currentOperand.has-error {\r\n  color: hsla(10, 85%, 57%, 1);\n}\n.Calculator-body {\r\n  background: white;\n}\n.Calculator-buttonsContainer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  overflow: visible;\r\n  position: relative;\n}\n.Calculator-buttonsContainer:before {\r\n  background-color: rgba(90, 95, 114, 0.76);\r\n  background-image: linear-gradient(\r\n    to bottom,\r\n    rgba(90, 95, 114, 0.76),\r\n    rgba(29, 32, 37, 0.8)\r\n  );\r\n  box-shadow: 17px 27px 72px 1px rgba(0, 0, 0, 0.3);\r\n  content: '';\r\n  filter: drop-shadow(0px 0px 7px rgba(0, 0, 0, 0.2));\r\n  left: -18px;\r\n  position: absolute;\r\n  right: -18px;\r\n  top: 0;\r\n  bottom: 0;\r\n  /* width: 100%; */\r\n  /* height: 100%; */\n}\n.Calculator-button {\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-family: Source Sans Pro;\r\n  font-size: 22px;\r\n  font-weight: 300;\r\n  justify-content: center;\r\n  line-height: 70px;\r\n  outline: 0;\r\n  padding: 0;\r\n  position: relative;\r\n  text-align: center;\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15);\r\n  transition: box-shadow 0.2s, background-color 0.15s;\r\n  z-index: 1;\r\n  width: 25%;\n}\n.Calculator-button:hover {\r\n  background-color: rgba(0, 0, 0, 0.08);\n}\n.Calculator-button.is-active,\r\n.Calculator-button:active {\r\n  box-shadow: inset 0 3px 15px 0 rgba(0, 0, 0, 0.3);\n}\n.Calculator-button > span {\r\n  display: block;\n}\n.Calculator-button.is-negation,\r\n.Calculator-button.is-modulo {\r\n  font-size: 18px;\n}\n.Calculator-button.is-square {\r\n  font-size: 16px;\n}\n.Calculator-button.is-division {\r\n  font-size: 20px;\n}\n.Calculator-button.is-multiplication svg {\r\n  width: 20px;\n}\n.Calculator-button.is-addition svg {\r\n  width: 20px;\n}\n.Calculator-button.is-subtraction svg {\r\n  width: 20px;\n}\n.Calculator-button.is-paren {\r\n  display: flex;\r\n  font-size: 18px;\r\n  width: 12.5%;\n}\n.Calculator-button--paren:hover,\r\n.Calculator-button--paren:active {\r\n  background: initial !important;\r\n  box-shadow: none !important;\r\n  cursor: default !important;\n}\n.Calculator-button--paren > span {\r\n  flex: 50%;\n}\n.Calculator-equals {\r\n  background-color: transparent;\r\n  border: 0;\r\n  background-image: linear-gradient(to right, #ff8d4b, #ff542e);\r\n  cursor: pointer;\r\n  display: block;\r\n  padding: 26px 0;\r\n  outline: none;\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: -1;\n}\n.Calculator-equalsLine {\r\n  background: white;\r\n  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.4);\r\n  display: block;\r\n  margin: 0 auto 6px;\r\n  width: 20px;\r\n  height: 1px;\n}\n.Calculator-equalsLine:last-child {\r\n  margin-bottom: 0;\n}\r\n",map:{version:3,sources:["/mnt/c/Users/tony/Github/calculator/src/calculator.vue","calculator.vue"],names:[],mappingsrBA,OAAA;AACA,gDAAA;AACA,4DAAA;AACA,OAAA;;AAEA,8FAAA;AAEA;EACA,2BAAA;;EAEA,gCAAA;EACA,gCAAA;;EAEA,gCAAA;EACA,gCAAA;;EAEA,gCAAA;EACA,gCAAA;;EAEA,gCAAA;EACA,gCAAA;;EAEA,kFAAA;EACA,4CAAA;EACA,2CAAA;;EAEA,4BAAA;EACA,4BAAA;;EAEA,yBAAA;EACA,2BAAA;EACA,wBAAA;AACA;AAEA;;;;EAIA,mBAAA;AACA;AAEA;EACA,sBAAA;EACA,4BAAA;EACA;;;;;;;;;;GAAA;EACA,iBAAA;AACA;AAEA;EACA,gDAAA;EACA,eAAA;EACA,4BAAA;EACA,gBAAA;EACA,cAAA;EACA,kBAAA;EACA,iBAAA;EACA,8BAAA;ECCE,UAAU;ADCZ;AAEA;EACA,iBAAA;EACA,gBAAA;EACA,wCAAA;EACA,kBAAA;EACA,iBAAA;AACA;AAEA;ECCE,gCAAgC;EDClC,cAAA;EACA,YAAA;EACA,eAAA;EACA,oCAAA;EACA,mCAAA;EACA,kBAAA;EACA,mBAAA;ECCE,WAAW;EDCb,iBAAA;AACA;AAEA;EACA,cAAA;EACA,YAAA;AACA;;AAEA,8EAAA;AACA;EACA,gBAAA;EACA,WAAA;ECCE,6CAA6C;EDC/C,gBAAA;EACA,UAAA;EACA,kBAAA;EACA,kBAAA;ECCE,wBAAwB;EDC1B,6BAAA;EACA,mFAAA;EACA,8BAAA;AACA;AAEA;EACA,WAAA;AACA;AAEA;EACA,UAAA;AACA;AAEA;ECCE,8BAA8B;EDChC,eAAA;EACA,gBAAA;EACA,gBAAA;ECCE,WAAW;ADCb;AAEA;ECCE,cAAc;EDChB,YAAA;EACA,iBAAA;EACA,iBAAA;EACA,gBAAA;EACA,yBAAA;EACA,8BAAA;AACA;AAEA;EACA,4BAAA;AACA;AAEA;EACA,iBAAA;AACA;AAEA;ECCE,aAAa;EDCf,eAAA;EACA,iBAAA;EACA,kBAAA;ACCA;ADEA;EACA,yCAAA;ECCE;;;;GDIF;EACA,iDAAA;EACA,WAAA;ECCE,mDAAmD;EDCrD,WAAA;EACA,kBAAA;EACA,YAAA;EACA,MAAA;EACA,SAAA;EACA,iBAAA;EACA,kBAAA;AACA;AAEA;EACA,6BAAA;EACA,SAAA;EACA,+BAAA;EACA,eAAA;EACA,aAAA;EACA,4BAAA;EACA,eAAA;EACA,gBAAA;ECCE,uBAAuB;EDCzB,iBAAA;EACA,UAAA;EACA,UAAA;EACA,kBAAA;EACA,kBAAA;EACA,4CAAA;EACA,mDAAA;EACA,UAAA;EACA,UAAA;AACA;AAEA;EACA,qCAAA;AACA;AAEA;;EAEA,iDAAA;AACA;ACEA;EDCA,cAAA;AACA;ACEA;;EDEA,eAAA;AACA;ACEA;EDCA,eAAA;AACA;ACEA;EDCA,eAAA;AACA;AAEA;ECCE,WAAW;ADCb;AAEA;ECCE,WAAW;ADCb;AAEA;ECCE,WAAW;ADCb;AAEA;ECCE,aAAa;EDCf,eAAA;EACA,YAAA;AACA;AAEA;;EAEA,8BAAA;ECCE,2BAA2B;EDC7B,0BAAA;AACA;AAEA;EACA,SAAA;ACCA;ADEA;EACA,6BAAA;EACA,SAAA;EACA,6DAAA;EACA,eAAA;ECCE,cAAc;EDChB,eAAA;EACA,aAAA;EACA,kBAAA;ECCE,WAAW;EDCb,WAAA;AACA;AAEA;EACA,iBAAA;EACA,0CAAA;EACA,cAAA;EACA,kBAAA;EACA,WAAA;EACA,WAAA;AACA;ACEA;EDCA,gBAAA;AACA",file:"calculator.vue",sourcesContent:["<template>\r\n  <div class=\"CalculatorBackground\">\r\n    <noscript>\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400&display=swap\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n    </noscript>\r\n    <div class=\"Calculator\">\r\n      <header class=\"Calculator-header\">\r\n        <div class=\"Calculator-formula\" data-formula>\r\n          <span class=\"Calculator-formulaOverflow\"></span\r\n          ><span class=\"Calculator-formulaList\">{{ formula }}</span>\r\n        </div>\r\n        <div class=\"Calculator-operands\">\r\n          <span\r\n            class=\"Calculator-currentOperand\"\r\n            data-total\r\n            :class=\"{ 'has-error': error }\"\r\n            :style=\"{\r\n              'font-size': font.size,\r\n              'font-weight': font.weight,\r\n            }\"\r\n          >\r\n            <span v-if=\"error\">Error</span>\r\n            <span v-else-if=\"mode & MODE_SHOW_TOTAL\">{{ total }}</span>\r\n            <span v-else>{{ currentOperand }}</span>\r\n          </span>\r\n        </div>\r\n      </header>\r\n      <div class=\"Calculator-body\">\r\n        <div class=\"Calculator-buttonsContainer\">\r\n          <button\r\n            v-for=\"button in buttons\"\r\n            class=\"Calculator-button\"\r\n            :key=\"button.id\"\r\n            :data-id=\"button.id\"\r\n            :class=\"button.className\"\r\n            @click=\"exec(button.action, button.args)\"\r\n          >\r\n            <span v-html=\"button.text\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <button\r\n        title=\"equals\"\r\n        class=\"Calculator-equals\"\r\n        @click=\"onExplicitEquals\"\r\n      >\r\n        <div class=\"Calculator-equalsLine\"></div>\r\n        <div class=\"Calculator-equalsLine\"></div>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport evalmath, { isOperator } from './math'\r\n\r\nconst keyboardNumbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\r\nconst keyboardOperators = ['*', '+', '-', '/']\r\n\r\nconst ACTION_CLEAR = 'clear'\r\nconst ACTION_CLEAR_ENTRY = 'clearEntry'\r\nconst ACTION_NEGATE = 'negate'\r\nconst ACTION_UPDATE_OPERATOR = 'updateOperator'\r\nconst ACTION_APPEND_OPERAND = 'appendOperand'\r\nconst ACTION_ADD_PAREN = 'addParen'\r\nconst ACTION_BACKSPACE = 'backspace'\r\nconst ACTION_SHOW_TOTAL = 'showTotal'\r\n\r\nconst buttons = [\r\n  {\r\n    id: 'C',\r\n    text: 'C',\r\n    className: 'is-clear',\r\n    action: ACTION_CLEAR,\r\n  },\r\n\r\n  {\r\n    id: 'CE',\r\n    text: 'CE',\r\n    className: 'is-clearEntry',\r\n    action: ACTION_CLEAR_ENTRY,\r\n  },\r\n  {\r\n    id: 'negate',\r\n    text: '+/-',\r\n    className: 'is-negation',\r\n    action: ACTION_NEGATE,\r\n  },\r\n  {\r\n    id: 'modulo',\r\n    text: '%',\r\n    className: 'is-modulo',\r\n    action: ACTION_UPDATE_OPERATOR,\r\n    args: {\r\n      operator: '%',\r\n    },\r\n  },\r\n  // {\r\n  //   id: 4,\r\n  //   text: '√',\r\n  //   className: 'is-square',\r\n  //   action: ACTION_UPDATE_OPERATOR,\r\n  //   args: {\r\n  //     operator: '√',\r\n  //   },\r\n  // },\r\n\r\n  {\r\n    id: '7',\r\n    text: '7',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '7',\r\n    },\r\n  },\r\n  {\r\n    id: '8',\r\n    text: '8',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '8',\r\n    },\r\n  },\r\n  {\r\n    id: '9',\r\n    text: '9',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '9',\r\n    },\r\n  },\r\n  {\r\n    id: '/',\r\n    text: '/',\r\n    className: 'is-division',\r\n    action: ACTION_UPDATE_OPERATOR,\r\n    args: {\r\n      operator: '/',\r\n    },\r\n  },\r\n\r\n  {\r\n    id: '4',\r\n    text: '4',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '4',\r\n    },\r\n  },\r\n  {\r\n    id: '5',\r\n    text: '5',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '5',\r\n    },\r\n  },\r\n  {\r\n    id: '6',\r\n    text: '6',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '6',\r\n    },\r\n  },\r\n  {\r\n    id: '*',\r\n    className: 'is-multiplication',\r\n    text: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"rgba(255,255,255,.9)\" stroke=\"rgba(255,255,255,.9)\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M368 368L144 144\"/><path fill=\"none\" stroke=\"rgba(255,255,255,.9)\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M368 144L144 368\"/></svg>`,\r\n    action: ACTION_UPDATE_OPERATOR,\r\n    args: {\r\n      operator: '*',\r\n    },\r\n  },\r\n\r\n  {\r\n    id: '1',\r\n    text: '1',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '1',\r\n    },\r\n  },\r\n  {\r\n    id: '2',\r\n    text: '2',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '2',\r\n    },\r\n  },\r\n  {\r\n    id: '3',\r\n    text: '3',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '3',\r\n    },\r\n  },\r\n  {\r\n    id: '-',\r\n    className: 'is-subtraction',\r\n    text: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><title>ionicons-v5-e</title><line x1=\"400\" y1=\"256\" x2=\"112\" y2=\"256\" style=\"fill:rgba(255,255,255,0.9);stroke:rgba(255,255,255,0.9);stroke-linecap:round;stroke-linejoin:round;stroke-width:32px\"/></svg>`,\r\n    action: ACTION_UPDATE_OPERATOR,\r\n    args: {\r\n      operator: '-',\r\n    },\r\n  },\r\n\r\n  {\r\n    id: '0',\r\n    text: '0',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '0',\r\n    },\r\n  },\r\n  {\r\n    id: '(',\r\n    text: '(',\r\n    className: ['is-paren', 'is-open-paren'],\r\n    action: ACTION_ADD_PAREN,\r\n    args: {\r\n      operator: '(',\r\n    },\r\n  },\r\n  {\r\n    id: ')',\r\n    text: ')',\r\n    className: ['is-paren', 'is-close-paren'],\r\n    action: ACTION_ADD_PAREN,\r\n    args: {\r\n      operator: ')',\r\n    },\r\n  },\r\n\r\n  {\r\n    id: '.',\r\n    text: '.',\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: '.',\r\n    },\r\n  },\r\n  {\r\n    id: '+',\r\n    text: '',\r\n    className: 'is-addition',\r\n    text: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path style=\"fill: rgba(255,255,255,0.9);stroke: rgba(255,255,255,0.9)\" d=\"M368.5 240H272v-96.5c0-8.8-7.2-16-16-16s-16 7.2-16 16V240h-96.5c-8.8 0-16 7.2-16 16 0 4.4 1.8 8.4 4.7 11.3 2.9 2.9 6.9 4.7 11.3 4.7H240v96.5c0 4.4 1.8 8.4 4.7 11.3 2.9 2.9 6.9 4.7 11.3 4.7 8.8 0 16-7.2 16-16V272h96.5c8.8 0 16-7.2 16-16s-7.2-16-16-16z\"/></svg>`,\r\n    action: ACTION_UPDATE_OPERATOR,\r\n    args: {\r\n      operator: '+',\r\n    },\r\n  },\r\n]\r\n\r\n// Mode show total causes the total to be displayed in the current operand display\r\nconst MODE_SHOW_TOTAL = 1 << 1\r\n// Mode insert operand causes the current operand to be overwritten. After the first character has been written, the mode should go to mode append operand\r\nconst MODE_INSERT_OPERAND = 1 << 2\r\n// Mode append operand causes any operand parts to be appended to the current operand\r\nconst MODE_APPEND_OPERAND = 1 << 3\r\n\r\n// The maximum number of digits the current operand may be\r\nconst MAX_NUMBER_LENGTH = Number.MAX_SAFE_INTEGER.toString().length\r\n\r\nfunction isNumberPart(str) {\r\n  return /^[0-9.]/.test(str)\r\n}\r\n\r\n// Debug function for flags\r\nfunction getFlags(flags) {\r\n  let arr = []\r\n\r\n  if (flags & MODE_SHOW_TOTAL) {\r\n    arr.push('MODE_SHOW_TOTAL')\r\n  }\r\n  if (flags & MODE_INSERT_OPERAND) {\r\n    arr.push('MODE_INSERT_OPERAND')\r\n  }\r\n\r\n  if (flags & MODE_APPEND_OPERAND) {\r\n    arr.push('MODE_APPEND_OPERAND')\r\n  }\r\n\r\n  return arr.join('|')\r\n}\r\n\r\nconst defaultCommands = [\r\n  {\r\n    match: {\r\n      key: 'Enter',\r\n    },\r\n    action: ACTION_SHOW_TOTAL,\r\n  },\r\n  {\r\n    match: {\r\n      key: 'Backspace',\r\n    },\r\n    action: ACTION_BACKSPACE,\r\n  },\r\n  {\r\n    match: {\r\n      key: 'Escape',\r\n    },\r\n    action: ACTION_CLEAR,\r\n  },\r\n  {\r\n    match: {\r\n      key: 'Delete',\r\n    },\r\n    action: ACTION_CLEAR_ENTRY,\r\n  },\r\n  ...keyboardNumbers.map(n => ({\r\n    match: {\r\n      key: n,\r\n    },\r\n    action: ACTION_APPEND_OPERAND,\r\n    args: {\r\n      value: n,\r\n    },\r\n  })),\r\n  ...keyboardOperators.map(n => ({\r\n    match: {\r\n      key: n,\r\n    },\r\n    action: ACTION_UPDATE_OPERATOR,\r\n    args: {\r\n      value: n,\r\n    },\r\n  })),\r\n]\r\n\r\nexport default {\r\n  props: {\r\n    commands: {\r\n      type: Array,\r\n      default: () => defaultCommands,\r\n    },\r\n  },\r\n  mounted() {\r\n    window.addEventListener('keydown', this.onKeyDown)\r\n  },\r\n  data() {\r\n    return {\r\n      MODE_SHOW_TOTAL,\r\n      MODE_INSERT_OPERAND,\r\n      MODE_APPEND_OPERAND,\r\n      activeButtons: [],\r\n      buttons,\r\n      expressions: ['5', '+', '7', '-', '45', '+', '3', '+', '177', '-'],\r\n      currentOperand: '147',\r\n      currentOperator: '-',\r\n      mode: MODE_SHOW_TOTAL | MODE_INSERT_OPERAND,\r\n      openParenStack: 0,\r\n      error: null,\r\n      total: 147,\r\n    }\r\n  },\r\n  computed: {\r\n    formula() {\r\n      return this.expressions\r\n        .map((str, index, array) => {\r\n          const s = str.trim()\r\n\r\n          if (array[index - 1] === '(') {\r\n            return s\r\n          } else if (s === ')') {\r\n            return s\r\n          } else if (s[0] === '-' && isNumberPart(s[1])) {\r\n            return ' ' + str\r\n          } else {\r\n            return ' ' + s\r\n          }\r\n\r\n          return str\r\n        })\r\n        .join('')\r\n    },\r\n    font() {\r\n      // TODO: Change this to be some equation\r\n      let length\r\n\r\n      if (this.mode & MODE_SHOW_TOTAL) {\r\n        length = this.total.toString().length\r\n      } else {\r\n        length = this.currentOperand.toString().length\r\n      }\r\n\r\n      let size\r\n      let weight\r\n\r\n      if (length < 8) {\r\n        size = '60px'\r\n        weight = '200'\r\n      } else if (length <= MAX_NUMBER_LENGTH) {\r\n        size = '28px'\r\n        weight = '300'\r\n      } else if (length >= MAX_NUMBER_LENGTH) {\r\n        size = '24px'\r\n        weight = '300'\r\n      }\r\n\r\n      return { size, weight }\r\n    },\r\n  },\r\n  methods: {\r\n    onKeyDown(e) {\r\n      if (event.defaultPrevented) {\r\n        return\r\n      }\r\n\r\n      this.commands.forEach(command => {\r\n        Object.keys(command.match).map(key => {\r\n          const value = command.match[key]\r\n\r\n          if (e[key] === value) {\r\n            this.exec(command.action, command.args)\r\n            this.$emit('keypress')\r\n          }\r\n        })\r\n      })\r\n    },\r\n    onExplicitEquals() {\r\n      this.showTotal({ explicit: true })\r\n    },\r\n    exec(action, args) {\r\n      console.log(action)\r\n\r\n      switch (action) {\r\n        case ACTION_BACKSPACE: {\r\n          this.backspace(args)\r\n          this.$emit('backspace')\r\n          break\r\n        }\r\n        case ACTION_CLEAR: {\r\n          this.clear(args)\r\n          this.$emit('clear')\r\n          break\r\n        }\r\n        case ACTION_CLEAR_ENTRY: {\r\n          this.clearEntry(args)\r\n          this.$emit('clear-entry')\r\n          break\r\n        }\r\n        case ACTION_NEGATE: {\r\n          this.negate(args)\r\n          this.$emit('negate')\r\n          break\r\n        }\r\n        case ACTION_UPDATE_OPERATOR: {\r\n          this.updateOperator(args)\r\n          this.$emit('operator.update')\r\n          break\r\n        }\r\n        case ACTION_APPEND_OPERAND: {\r\n          this.appendOperand(args)\r\n          this.$emit('operand.append')\r\n          break\r\n        }\r\n        case ACTION_ADD_PAREN: {\r\n          this.addParen(args)\r\n          this.$emit('paren.add')\r\n          break\r\n        }\r\n        default: {\r\n          console.error(`action not found: \"${action}\"`)\r\n        }\r\n      }\r\n\r\n      this.showTotal()\r\n    },\r\n    clear() {\r\n      this.expressions = []\r\n      this.currentOperand = '0'\r\n      this.currentOperator = ''\r\n      this.openParenStack = 0\r\n      this.mode = MODE_SHOW_TOTAL | MODE_INSERT_OPERAND\r\n      this.error = null\r\n      this.total = 0\r\n    },\r\n\r\n    backspace() {\r\n      let operand = this.currentOperand.slice(0, -1)\r\n\r\n      if (operand.length === 0) {\r\n        operand = '0'\r\n      }\r\n\r\n      this.currentOperand = operand\r\n    },\r\n\r\n    clearEntry() {\r\n      this.currentOperand = '0'\r\n    },\r\n\r\n    negate() {\r\n      // Only add negative sign if not zero\r\n      if (this.currentOperand !== 0) {\r\n        this.currentOperand = (-this.currentOperand).toString()\r\n      }\r\n\r\n      // console.log(this.currentOperand)\r\n    },\r\n\r\n    updateOperator({ operator }) {\r\n      const length = this.expressions.length\r\n      const last = this.expressions[length - 1] || ''\r\n      const { mode, currentOperand } = this\r\n\r\n      if (mode & MODE_INSERT_OPERAND) {\r\n        // console.log('MODE_INSERT_OPERAND')\r\n\r\n        if (length === 0) {\r\n          this.expressions.push(currentOperand, operator)\r\n        } else if (isOperator(last)) {\r\n          // console.log('isoplast');                            // APPEND_OP LOG\r\n          this.expressions.pop()\r\n          this.expressions.push(operator)\r\n        } else if (last === ')') {\r\n          // console.log('nope');                                // APPEND_OP LOG\r\n          this.expressions.push(operator)\r\n        } else if (last === '(') {\r\n          this.expressions.push(currentOperand, operator)\r\n        }\r\n      } else if (mode & MODE_APPEND_OPERAND) {\r\n        // console.log('MODE_APPEND_OPERAND')\r\n\r\n        if (length === 0) {\r\n          this.expressions.push(currentOperand, operator)\r\n        } else if (isOperator(last)) {\r\n          this.expressions.push(currentOperand, operator)\r\n        } else if (last === ')') {\r\n          this.expressions.push(operator)\r\n        } else if (last === '(') {\r\n          this.expressions.push(currentOperand, operator)\r\n        }\r\n      }\r\n\r\n      this.currentOperator = operator\r\n      this.mode = MODE_INSERT_OPERAND | MODE_SHOW_TOTAL\r\n\r\n      console.log('UPDATE_OPERATOR:', this.expressions)\r\n    },\r\n\r\n    addParen({ operator }) {\r\n      const last = this.expressions[this.expressions.length - 1] || ''\r\n      const { currentOperand, openParenStack } = this\r\n\r\n      // console.log('ADD_PAREN:', {last, operator});\r\n\r\n      if (operator === ')' && openParenStack === 0) {\r\n        // No need to add closing paren if there is no open paren\r\n        return\r\n      } else if (operator === '(' && last === ')') {\r\n        // FIXME: Look at real calculator for semantics\r\n        return\r\n      }\r\n\r\n      if (last === '(' && operator === ')') {\r\n        // Handle immediate closed parens\r\n        this.expressions.push(currentOperand, operator)\r\n      } else if (isOperator(last) && operator === ')') {\r\n        // Automatically append current operand when expressions\r\n        // is \"(5 *\" so result is \"(5 * 5)\"\r\n        this.expressions.push(currentOperand, operator)\r\n      } else if ((isOperator(last) || length === 0) && operator === '(') {\r\n        // Handle \"5 *\" where the result is \"5 * (\" and \"(\" is the beginning\r\n        // of a new group expression\r\n        this.expressions.push(operator)\r\n      }\r\n\r\n      if (operator === '(') {\r\n        this.openParenStack++\r\n      } else if (operator === ')') {\r\n        this.openParenStack--\r\n      }\r\n    },\r\n\r\n    appendOperand({ value, operator }) {\r\n      const currentOperand = this.currentOperand\r\n      let newOperand = currentOperand\r\n      let newMode\r\n\r\n      // Don't append 0 to 0\r\n      if (value === '0' && currentOperand[0] === '0') {\r\n        return\r\n      } else if (value === '.' && currentOperand.includes('.')) {\r\n        // Avoid appending multiple decimals\r\n        return\r\n      }\r\n\r\n      // Switch modes from showing the total to the current operand\r\n      if (this.mode & MODE_SHOW_TOTAL) {\r\n        newMode = MODE_INSERT_OPERAND\r\n      }\r\n\r\n      if (this.mode & MODE_INSERT_OPERAND) {\r\n        // console.log('INSERT');\r\n        newOperand = value.toString()\r\n        this.mode = MODE_APPEND_OPERAND\r\n      } else {\r\n        // console.log('APPEND');\r\n        newOperand += value.toString()\r\n      }\r\n\r\n      // TODO: Update font size, actually should do that in the vm\r\n      this.currentOperand = newOperand.substring(0, MAX_NUMBER_LENGTH)\r\n    },\r\n\r\n    showTotal({ explicit } = {}) {\r\n      const last = this.expressions[this.expressions.length - 1] || ''\r\n      const expressions = this.expressions.slice(0)\r\n      const currentOperand = this.currentOperand\r\n      const mode = this.mode\r\n      const currentTotal = this.total\r\n      const openParenStack = this.openParenStack\r\n      const isFirstNumber = typeof Number(expressions[0]) === 'number'\r\n      const isSecondOperator = isOperator(expressions[1] || '')\r\n      const length = expressions.length\r\n      let times = openParenStack\r\n      let total\r\n\r\n      if (expressions.length === 0) {\r\n        return\r\n      } else if (\r\n        explicit &&\r\n        isFirstNumber &&\r\n        isSecondOperator &&\r\n        length === 2\r\n      ) {\r\n        // Handle case where expressions is 5 *\r\n\r\n        // console.log('explicit && isFirstNumber && isSecondOperator');\r\n        expressions.push(currentOperand)\r\n      } else if (explicit && isOperator(last)) {\r\n        // Handle case where expressions is ['5', '*', '4', '+'] and\r\n        // the total is being explicitly being requested\r\n\r\n        // console.log('explicit && isOperator(last)', isOperator(last), last);\r\n        if (mode & MODE_INSERT_OPERAND) {\r\n          expressions.push(currentTotal)\r\n        } else if (mode & MODE_APPEND_OPERAND) {\r\n          expressions.push(currentOperand)\r\n        }\r\n      } else if (isOperator(last)) {\r\n        // Handle case where expressions is ['5', '*', '4', '+']\r\n        expressions.pop()\r\n      }\r\n\r\n      if (explicit) {\r\n        // Automatically close parens when explicitly requesting\r\n        // the total\r\n        let times = openParenStack\r\n\r\n        while (times-- > 0) {\r\n          expressions.push(')')\r\n        }\r\n      } else if (!explicit && openParenStack === 1) {\r\n        // Auto close if there is only one missing paren\r\n        expressions.push(')')\r\n      }\r\n\r\n      try {\r\n        total = evalmath(expressions.join(' '))\r\n\r\n        if (explicit) {\r\n          this.clear()\r\n        }\r\n\r\n        this.total = total\r\n      } catch (err) {\r\n        if (explicit) {\r\n          this.clear()\r\n          this.error = err\r\n          console.log(err)\r\n        }\r\n      }\r\n\r\n      console.log(\r\n        'SHOW_TOTAL; Expressions: \"%s\"; Total: %s; Explicit: %s',\r\n        expressions.join(' '),\r\n        total,\r\n        !!explicit\r\n      )\r\n\r\n      if (explicit) {\r\n        this.$emit('update:total.explicit')\r\n      } else {\r\n        this.$emit('update:total')\r\n      }\r\n\r\n      return total\r\n    },\r\n  },\r\n}\r\n<\/script>\r\n\r\n<style>\r\n/* // */\r\n/* // -> Design credit goes to Jaroslav Getman */\r\n/* // -> https://dribbble.com/shots/2334270-004-Calculator */\r\n/* // */\r\n\r\n/* @import url('https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css') */\r\n\r\nhtml {\r\n  --foreground--dark: #151515;\r\n\r\n  --background-gradient-1: #b6b2ab;\r\n  --background-gradient-2: #b3afa7;\r\n\r\n  --background-gradient-3: #b8b5af;\r\n  --background-gradient-4: #78736b;\r\n\r\n  --background-gradient-5: #6f6862;\r\n  --background-gradient-6: #58504b;\r\n\r\n  --background-gradient-7: #5f574e;\r\n  --background-gradient-8: #625a51;\r\n\r\n  /* // I don't know how to get the colors closer here, would need the actual hsla */\r\n  --gradient-blue-1: hsla(226, 12%, 40%, 0.76);\r\n  --gradient-blue-2: hsla(222, 12%, 13%, 0.8);\r\n\r\n  --gradient-orange-1: #ff8d4b;\r\n  --gradient-orange-2: #ff542e;\r\n\r\n  --calculator-width: 260px;\r\n  --header-padding-left: 20px;\r\n  --something-height: 22px;\r\n}\r\n\r\n.Calculator,\r\n.Calculator *,\r\n.Calculator *:before,\r\n.Calculator *:after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n.CalculatorBackground {\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(\r\n    135deg,\r\n    #b6b2ab 0%,\r\n    #b3afa7 25%,\r\n    #b8b5af 25%,\r\n    #78736b 50%,\r\n    #6f6862 50%,\r\n    #58504b 75%,\r\n    #5f574e 75%,\r\n    #625a51 100%\r\n  );\r\n  min-height: 100vh;\r\n}\r\n\r\n.Calculator {\r\n  box-shadow: 12px 18px 45px 0 rgba(0, 0, 0, 0.25);\r\n  cursor: default;\r\n  font-family: Source Sans Pro;\r\n  line-height: 1.5;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  user-select: none;\r\n  width: var(--calculator-width);\r\n  z-index: 1;\r\n}\r\n\r\n.Calculator-header {\r\n  background: white;\r\n  overflow: hidden;\r\n  padding: 20px var(--header-padding-left);\r\n  position: relative;\r\n  text-align: right;\r\n}\r\n\r\n.Calculator-formula {\r\n  color: rgba(158, 158, 158, 0.76);\r\n  display: block;\r\n  float: right;\r\n  font-size: 15px;\r\n  line-height: var(--something-height);\r\n  min-height: var(--something-height);\r\n  position: relative;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  word-wrap: normal;\r\n}\r\n\r\n.Calculator-formulaList {\r\n  display: block;\r\n  float: right;\r\n}\r\n\r\n/* // \tNot sure how to represent that there are more expressions to the left */\r\n.Calculator__expressionsOverflow {\r\n  /* $width: 2px */\r\n  color: #333;\r\n  box-shadow: 5px 0 20px 4px rgba(0, 0, 0, 0.3);\r\n  font-weight: 700;\r\n  opacity: 0;\r\n  padding-right: 0px;\r\n  text-align: center;\r\n  transition: opacity 0.5s;\r\n  transform: translate(0, -50%);\r\n  /* +position(absolute, 50% null null negative($header-padding-left) - $width - 2) */\r\n  /* +size($width $height - 5) */\r\n}\r\n\r\n.Calculator__expressionsOverflow:before {\r\n  content: '';\r\n}\r\n\r\n.Calculator__expressionsOverflow.is-showing {\r\n  opacity: 1;\r\n}\r\n\r\n.Calculator-operands {\r\n  color: var(--foreground--dark);\r\n  font-size: 60px;\r\n  font-weight: 200;\r\n  line-height: 1.1;\r\n  clear: both;\r\n}\r\n\r\n.Calculator-currentOperand {\r\n  display: block;\r\n  float: right;\r\n  line-height: 60px;\r\n  overflow: visible;\r\n  min-height: 60px;\r\n  transition-duration: 0.2s;\r\n  transition-property: font-size;\r\n}\r\n\r\n.Calculator-currentOperand.has-error {\r\n  color: hsla(10, 85%, 57%, 1);\r\n}\r\n\r\n.Calculator-body {\r\n  background: white;\r\n}\r\n\r\n.Calculator-buttonsContainer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  overflow: visible;\r\n  position: relative;\r\n}\r\n\r\n.Calculator-buttonsContainer:before {\r\n  background-color: rgba(90, 95, 114, 0.76);\r\n  background-image: linear-gradient(\r\n    to bottom,\r\n    rgba(90, 95, 114, 0.76),\r\n    rgba(29, 32, 37, 0.8)\r\n  );\r\n  box-shadow: 17px 27px 72px 1px rgba(0, 0, 0, 0.3);\r\n  content: '';\r\n  filter: drop-shadow(0px 0px 7px rgba(0, 0, 0, 0.2));\r\n  left: -18px;\r\n  position: absolute;\r\n  right: -18px;\r\n  top: 0;\r\n  bottom: 0;\r\n  /* width: 100%; */\r\n  /* height: 100%; */\r\n}\r\n\r\n.Calculator-button {\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-family: Source Sans Pro;\r\n  font-size: 22px;\r\n  font-weight: 300;\r\n  justify-content: center;\r\n  line-height: 70px;\r\n  outline: 0;\r\n  padding: 0;\r\n  position: relative;\r\n  text-align: center;\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15);\r\n  transition: box-shadow 0.2s, background-color 0.15s;\r\n  z-index: 1;\r\n  width: 25%;\r\n}\r\n\r\n.Calculator-button:hover {\r\n  background-color: rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.Calculator-button.is-active,\r\n.Calculator-button:active {\r\n  box-shadow: inset 0 3px 15px 0 rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.Calculator-button > span {\r\n  display: block;\r\n}\r\n\r\n.Calculator-button.is-negation,\r\n.Calculator-button.is-modulo {\r\n  font-size: 18px;\r\n}\r\n\r\n.Calculator-button.is-square {\r\n  font-size: 16px;\r\n}\r\n\r\n.Calculator-button.is-division {\r\n  font-size: 20px;\r\n}\r\n\r\n.Calculator-button.is-multiplication svg {\r\n  width: 20px;\r\n}\r\n\r\n.Calculator-button.is-addition svg {\r\n  width: 20px;\r\n}\r\n\r\n.Calculator-button.is-subtraction svg {\r\n  width: 20px;\r\n}\r\n\r\n.Calculator-button.is-paren {\r\n  display: flex;\r\n  font-size: 18px;\r\n  width: 12.5%;\r\n}\r\n\r\n.Calculator-button--paren:hover,\r\n.Calculator-button--paren:active {\r\n  background: initial !important;\r\n  box-shadow: none !important;\r\n  cursor: default !important;\r\n}\r\n\r\n.Calculator-button--paren > span {\r\n  flex: 50%;\r\n}\r\n\r\n.Calculator-equals {\r\n  background-color: transparent;\r\n  border: 0;\r\n  background-image: linear-gradient(to right, #ff8d4b, #ff542e);\r\n  cursor: pointer;\r\n  display: block;\r\n  padding: 26px 0;\r\n  outline: none;\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: -1;\r\n}\r\n\r\n.Calculator-equalsLine {\r\n  background: white;\r\n  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.4);\r\n  display: block;\r\n  margin: 0 auto 6px;\r\n  width: 20px;\r\n  height: 1px;\r\n}\r\n\r\n.Calculator-equalsLine:last-child {\r\n  margin-bottom: 0;\r\n}\r\n</style>\r\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n/* // */\r\n/* // -> Design credit goes to Jaroslav Getman */\r\n/* // -> https://dribbble.com/shots/2334270-004-Calculator */\r\n/* // */\r\n\r\n/* @import url('https://cdnjs.cloudflare.com/ajax/libs/ionicons/2.0.1/css/ionicons.min.css') */\r\n\r\nhtml {\r\n  --foreground--dark: #151515;\r\n\r\n  --background-gradient-1: #b6b2ab;\r\n  --background-gradient-2: #b3afa7;\r\n\r\n  --background-gradient-3: #b8b5af;\r\n  --background-gradient-4: #78736b;\r\n\r\n  --background-gradient-5: #6f6862;\r\n  --background-gradient-6: #58504b;\r\n\r\n  --background-gradient-7: #5f574e;\r\n  --background-gradient-8: #625a51;\r\n\r\n  /* // I don't know how to get the colors closer here, would need the actual hsla */\r\n  --gradient-blue-1: hsla(226, 12%, 40%, 0.76);\r\n  --gradient-blue-2: hsla(222, 12%, 13%, 0.8);\r\n\r\n  --gradient-orange-1: #ff8d4b;\r\n  --gradient-orange-2: #ff542e;\r\n\r\n  --calculator-width: 260px;\r\n  --header-padding-left: 20px;\r\n  --something-height: 22px;\r\n}\r\n\r\n.Calculator,\r\n.Calculator *,\r\n.Calculator *:before,\r\n.Calculator *:after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n.CalculatorBackground {\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-image: linear-gradient(\r\n    135deg,\r\n    #b6b2ab 0%,\r\n    #b3afa7 25%,\r\n    #b8b5af 25%,\r\n    #78736b 50%,\r\n    #6f6862 50%,\r\n    #58504b 75%,\r\n    #5f574e 75%,\r\n    #625a51 100%\r\n  );\r\n  min-height: 100vh;\r\n}\r\n\r\n.Calculator {\r\n  box-shadow: 12px 18px 45px 0 rgba(0, 0, 0, 0.25);\r\n  cursor: default;\r\n  font-family: Source Sans Pro;\r\n  line-height: 1.5;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  user-select: none;\r\n  width: var(--calculator-width);\r\n  z-index: 1;\r\n}\r\n\r\n.Calculator-header {\r\n  background: white;\r\n  overflow: hidden;\r\n  padding: 20px var(--header-padding-left);\r\n  position: relative;\r\n  text-align: right;\r\n}\r\n\r\n.Calculator-formula {\r\n  color: rgba(158, 158, 158, 0.76);\r\n  display: block;\r\n  float: right;\r\n  font-size: 15px;\r\n  line-height: var(--something-height);\r\n  min-height: var(--something-height);\r\n  position: relative;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  word-wrap: normal;\r\n}\r\n\r\n.Calculator-formulaList {\r\n  display: block;\r\n  float: right;\r\n}\r\n\r\n/* // \tNot sure how to represent that there are more expressions to the left */\r\n.Calculator__expressionsOverflow {\r\n  /* $width: 2px */\r\n  color: #333;\r\n  box-shadow: 5px 0 20px 4px rgba(0, 0, 0, 0.3);\r\n  font-weight: 700;\r\n  opacity: 0;\r\n  padding-right: 0px;\r\n  text-align: center;\r\n  transition: opacity 0.5s;\r\n  transform: translate(0, -50%);\r\n  /* +position(absolute, 50% null null negative($header-padding-left) - $width - 2) */\r\n  /* +size($width $height - 5) */\r\n}\r\n\r\n.Calculator__expressionsOverflow:before {\r\n  content: '';\r\n}\r\n\r\n.Calculator__expressionsOverflow.is-showing {\r\n  opacity: 1;\r\n}\r\n\r\n.Calculator-operands {\r\n  color: var(--foreground--dark);\r\n  font-size: 60px;\r\n  font-weight: 200;\r\n  line-height: 1.1;\r\n  clear: both;\r\n}\r\n\r\n.Calculator-currentOperand {\r\n  display: block;\r\n  float: right;\r\n  line-height: 60px;\r\n  overflow: visible;\r\n  min-height: 60px;\r\n  transition-duration: 0.2s;\r\n  transition-property: font-size;\r\n}\r\n\r\n.Calculator-currentOperand.has-error {\r\n  color: hsla(10, 85%, 57%, 1);\r\n}\r\n\r\n.Calculator-body {\r\n  background: white;\r\n}\r\n\r\n.Calculator-buttonsContainer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  overflow: visible;\r\n  position: relative;\r\n}\r\n\r\n.Calculator-buttonsContainer:before {\r\n  background-color: rgba(90, 95, 114, 0.76);\r\n  background-image: linear-gradient(\r\n    to bottom,\r\n    rgba(90, 95, 114, 0.76),\r\n    rgba(29, 32, 37, 0.8)\r\n  );\r\n  box-shadow: 17px 27px 72px 1px rgba(0, 0, 0, 0.3);\r\n  content: '';\r\n  filter: drop-shadow(0px 0px 7px rgba(0, 0, 0, 0.2));\r\n  left: -18px;\r\n  position: absolute;\r\n  right: -18px;\r\n  top: 0;\r\n  bottom: 0;\r\n  /* width: 100%; */\r\n  /* height: 100%; */\r\n}\r\n\r\n.Calculator-button {\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-family: Source Sans Pro;\r\n  font-size: 22px;\r\n  font-weight: 300;\r\n  justify-content: center;\r\n  line-height: 70px;\r\n  outline: 0;\r\n  padding: 0;\r\n  position: relative;\r\n  text-align: center;\r\n  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.15);\r\n  transition: box-shadow 0.2s, background-color 0.15s;\r\n  z-index: 1;\r\n  width: 25%;\r\n}\r\n\r\n.Calculator-button:hover {\r\n  background-color: rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.Calculator-button.is-active,\r\n.Calculator-button:active {\r\n  box-shadow: inset 0 3px 15px 0 rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.Calculator-button > span {\r\n  display: block;\r\n}\r\n\r\n.Calculator-button.is-negation,\r\n.Calculator-button.is-modulo {\r\n  font-size: 18px;\r\n}\r\n\r\n.Calculator-button.is-square {\r\n  font-size: 16px;\r\n}\r\n\r\n.Calculator-button.is-division {\r\n  font-size: 20px;\r\n}\r\n\r\n.Calculator-button.is-multiplication svg {\r\n  width: 20px;\r\n}\r\n\r\n.Calculator-button.is-addition svg {\r\n  width: 20px;\r\n}\r\n\r\n.Calculator-button.is-subtraction svg {\r\n  width: 20px;\r\n}\r\n\r\n.Calculator-button.is-paren {\r\n  display: flex;\r\n  font-size: 18px;\r\n  width: 12.5%;\r\n}\r\n\r\n.Calculator-button--paren:hover,\r\n.Calculator-button--paren:active {\r\n  background: initial !important;\r\n  box-shadow: none !important;\r\n  cursor: default !important;\r\n}\r\n\r\n.Calculator-button--paren > span {\r\n  flex: 50%;\r\n}\r\n\r\n.Calculator-equals {\r\n  background-color: transparent;\r\n  border: 0;\r\n  background-image: linear-gradient(to right, #ff8d4b, #ff542e);\r\n  cursor: pointer;\r\n  display: block;\r\n  padding: 26px 0;\r\n  outline: none;\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: -1;\r\n}\r\n\r\n.Calculator-equalsLine {\r\n  background: white;\r\n  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.4);\r\n  display: block;\r\n  margin: 0 auto 6px;\r\n  width: 20px;\r\n  height: 1px;\r\n}\r\n\r\n.Calculator-equalsLine:last-child {\r\n  margin-bottom: 0;\r\n}\r\n"]},media:void 0})},R,void 0,!1,void 0,!1,r.createInjector,void 0,void 0);function B(n){B.installed||(B.installed=!0,n.component("calculator",S))}var I={install:B},L=null;"undefined"!=typeof window?L=window.Vue:"undefined"!=typeof global&&(L=global.Vue),L&&L.use(I),n.default=S,n.install=B,Object.defineProperty(n,"__esModule",{value:!0})});
